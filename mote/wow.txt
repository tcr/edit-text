   Compiling oatie v0.2.0 (file:///Users/trim/tcr/edit-text/oatie)
   Compiling mote v0.1.0 (file:///Users/trim/tcr/edit-text/mote)
    Finished dev [unoptimized + debuginfo] target(s) in 4.48 secs
     Running `target/debug/mote`
Doc server running on http://localhost:3000/
Running send_hello handler, URL path: hello
Running test_thing handler, URL path: confirm
SHOULD MATCH Ok("[[[[],[{\"AddWithGroup\":[{\"AddWithGroup\":[{\"AddWithGroup\":[{\"AddSkip\":11},{\"AddChars\":\"?\"}]}]}]}]]],[{\"DocGroup\":[{\"tag\":\"ul\"},[{\"DocGroup\":[{\"tag\":\"li\"},[{\"DocGroup\":[{\"tag\":\"h1\"},[{\"DocChars\":\"Hello! \"},{\"DocGroup\":[{\"tag\":\"b\"},[{\"DocChars\":\"what\'s \"}]]},{\"DocChars\":\"up??\"}]]},{\"DocGroup\":[{\"tag\":\"p\"},[{\"DocChars\":\"World!\"}]]}]]}]]}]]")
OPP add [DelWithGroup([DelWithGroup([DelGroup([DelSkip(12)])])])]
   del [AddWithGroup([AddWithGroup([AddGroup({"tag": "h1"}, [AddSkip(7)]), AddGroup({"tag": "p"}, [AddSkip(5)])])])]
CMP add [DelWithGroup([DelWithGroup([DelGroup([DelSkip(12)])])])]
    del [AddWithGroup([AddWithGroup([AddGroup({"tag": "h1"}, [AddSkip(7)]), AddGroup({"tag": "p"}, [AddSkip(5)])])])]
start obj [DocGroup({"tag": "ul"}, [DocGroup({"tag": "li"}, [DocGroup({"tag": "h1"}, [DocChars("Hello! "), DocGroup({"tag": "b"}, [DocChars("what\'s")]), DocChars(" up?")]), DocGroup({"tag": "p"}, [DocChars("World!")])])])]
apply op ([DelWithGroup([DelWithGroup([DelGroup([DelSkip(12)])])])], [AddWithGroup([AddWithGroup([AddGroup({"tag": "h1"}, [AddSkip(7)]), AddGroup({"tag": "p"}, [AddSkip(5)])])])])
COMPARE [DocGroup({"tag": "ul"}, [DocGroup({"tag": "li"}, [DocGroup({"tag": "h1"}, [DocChars("Hello! ")]), DocGroup({"tag": "p"}, [DocGroup({"tag": "b"}, [DocChars("what\'s")]), DocChars(" up?")]), DocGroup({"tag": "p"}, [DocChars("World!")])])])]
EXPECTD [DocGroup({"tag": "ul"}, [DocGroup({"tag": "li"}, [DocGroup({"tag": "h1"}, [DocChars("Hello! ")]), DocGroup({"tag": "p"}, [DocGroup({"tag": "b"}, [DocChars("what\'s")]), DocChars(" up?")]), DocGroup({"tag": "p"}, [DocChars("World!")])])])]
success? true
Running test_thing handler, URL path: confirm
SHOULD MATCH Ok("[[[[],[{\"AddWithGroup\":[{\"AddWithGroup\":[{\"AddWithGroup\":[{\"AddSkip\":11},{\"AddChars\":\"?\"}]}]}]}]]],[{\"DocGroup\":[{\"tag\":\"ul\"},[{\"DocGroup\":[{\"tag\":\"li\"},[{\"DocGroup\":[{\"tag\":\"h1\"},[{\"DocChars\":\"Hello! \"},{\"DocGroup\":[{\"tag\":\"b\"},[{\"DocChars\":\"what\'s \"}]]},{\"DocChars\":\"up??\"}]]},{\"DocGroup\":[{\"tag\":\"p\"},[{\"DocChars\":\"World!\"}]]}]]}]]}]]")
OPP add [DelWithGroup([DelWithGroup([DelGroup([DelSkip(12)])])])]
   del [AddWithGroup([AddWithGroup([AddGroup({"tag": "h1"}, [AddSkip(7)]), AddGroup({"tag": "p"}, [AddSkip(5)])])])]
OPP add [DelWithGroup([DelWithGroup([DelWithGroup([DelSkip(6), DelChars(1)])])])]
   del []
CMP add [DelWithGroup([DelWithGroup([DelGroup([DelSkip(6), DelChars(1), DelSkip(5)])])])]
    del [AddWithGroup([AddWithGroup([AddGroup({"tag": "h1"}, [AddSkip(6)]), AddGroup({"tag": "p"}, [AddSkip(5)])])])]
start obj [DocGroup({"tag": "ul"}, [DocGroup({"tag": "li"}, [DocGroup({"tag": "h1"}, [DocChars("Hello! "), DocGroup({"tag": "b"}, [DocChars("what\'s")]), DocChars(" up?")]), DocGroup({"tag": "p"}, [DocChars("World!")])])])]
apply op ([DelWithGroup([DelWithGroup([DelGroup([DelSkip(6), DelChars(1), DelSkip(5)])])])], [AddWithGroup([AddWithGroup([AddGroup({"tag": "h1"}, [AddSkip(6)]), AddGroup({"tag": "p"}, [AddSkip(5)])])])])
COMPARE [DocGroup({"tag": "ul"}, [DocGroup({"tag": "li"}, [DocGroup({"tag": "h1"}, [DocChars("Hello!")]), DocGroup({"tag": "p"}, [DocGroup({"tag": "b"}, [DocChars("what\'s")]), DocChars(" up?")]), DocGroup({"tag": "p"}, [DocChars("World!")])])])]
EXPECTD [DocGroup({"tag": "ul"}, [DocGroup({"tag": "li"}, [DocGroup({"tag": "h1"}, [DocChars("Hello!")]), DocGroup({"tag": "p"}, [DocGroup({"tag": "b"}, [DocChars("what\'s")]), DocChars(" up?")]), DocGroup({"tag": "p"}, [DocChars("World!")])])])]
success? true
Running test_thing handler, URL path: confirm
SHOULD MATCH Ok("[[[[],[{\"AddWithGroup\":[{\"AddWithGroup\":[{\"AddWithGroup\":[{\"AddSkip\":11},{\"AddChars\":\"?\"}]}]}]}]]],[{\"DocGroup\":[{\"tag\":\"ul\"},[{\"DocGroup\":[{\"tag\":\"li\"},[{\"DocGroup\":[{\"tag\":\"h1\"},[{\"DocChars\":\"Hello! \"},{\"DocGroup\":[{\"tag\":\"b\"},[{\"DocChars\":\"what\'s \"}]]},{\"DocChars\":\"up??\"}]]},{\"DocGroup\":[{\"tag\":\"p\"},[{\"DocChars\":\"World!\"}]]}]]}]]}]]")
OPP add [DelWithGroup([DelWithGroup([DelGroup([DelSkip(12)])])])]
   del [AddWithGroup([AddWithGroup([AddGroup({"tag": "h1"}, [AddSkip(7)]), AddGroup({"tag": "p"}, [AddSkip(5)])])])]
OPP add [DelWithGroup([DelWithGroup([DelWithGroup([DelSkip(6), DelChars(1)])])])]
   del []
OPP add []
   del [AddWithGroup([AddWithGroup([AddSkip(1), AddWithGroup([AddWithGroup([AddSkip(1), AddChars("W")])])])])]
CMP add [DelWithGroup([DelWithGroup([DelGroup([DelSkip(6), DelChars(1), DelSkip(5)])])])]
    del [AddWithGroup([AddWithGroup([AddGroup({"tag": "h1"}, [AddSkip(6)]), AddGroup({"tag": "p"}, [AddWithGroup([AddSkip(1), AddChars("W")]), AddSkip(4)])])])]
start obj [DocGroup({"tag": "ul"}, [DocGroup({"tag": "li"}, [DocGroup({"tag": "h1"}, [DocChars("Hello! "), DocGroup({"tag": "b"}, [DocChars("what\'s")]), DocChars(" up?")]), DocGroup({"tag": "p"}, [DocChars("World!")])])])]
apply op ([DelWithGroup([DelWithGroup([DelGroup([DelSkip(6), DelChars(1), DelSkip(5)])])])], [AddWithGroup([AddWithGroup([AddGroup({"tag": "h1"}, [AddSkip(6)]), AddGroup({"tag": "p"}, [AddWithGroup([AddSkip(1), AddChars("W")]), AddSkip(4)])])])])
COMPARE [DocGroup({"tag": "ul"}, [DocGroup({"tag": "li"}, [DocGroup({"tag": "h1"}, [DocChars("Hello!")]), DocGroup({"tag": "p"}, [DocGroup({"tag": "b"}, [DocChars("wWhat\'s")]), DocChars(" up?")]), DocGroup({"tag": "p"}, [DocChars("World!")])])])]
EXPECTD [DocGroup({"tag": "ul"}, [DocGroup({"tag": "li"}, [DocGroup({"tag": "h1"}, [DocChars("Hello!")]), DocGroup({"tag": "p"}, [DocGroup({"tag": "b"}, [DocChars("wWhat\'s")]), DocChars(" up?")]), DocGroup({"tag": "p"}, [DocChars("World!")])])])]
success? true
Running test_thing handler, URL path: confirm
SHOULD MATCH Ok("[[[[],[{\"AddWithGroup\":[{\"AddWithGroup\":[{\"AddWithGroup\":[{\"AddSkip\":11},{\"AddChars\":\"?\"}]}]}]}]]],[{\"DocGroup\":[{\"tag\":\"ul\"},[{\"DocGroup\":[{\"tag\":\"li\"},[{\"DocGroup\":[{\"tag\":\"h1\"},[{\"DocChars\":\"Hello! \"},{\"DocGroup\":[{\"tag\":\"b\"},[{\"DocChars\":\"what\'s \"}]]},{\"DocChars\":\"up??\"}]]},{\"DocGroup\":[{\"tag\":\"p\"},[{\"DocChars\":\"World!\"}]]}]]}]]}]]")
OPP add [DelWithGroup([DelWithGroup([DelGroup([DelSkip(12)])])])]
   del [AddWithGroup([AddWithGroup([AddGroup({"tag": "h1"}, [AddSkip(7)]), AddGroup({"tag": "p"}, [AddSkip(5)])])])]
OPP add [DelWithGroup([DelWithGroup([DelWithGroup([DelSkip(6), DelChars(1)])])])]
   del []
OPP add []
   del [AddWithGroup([AddWithGroup([AddSkip(1), AddWithGroup([AddWithGroup([AddSkip(1), AddChars("W")])])])])]
OPP add [DelWithGroup([DelWithGroup([DelSkip(1), DelWithGroup([DelWithGroup([DelChars(1)])])])])]
   del []
CMP add [DelWithGroup([DelWithGroup([DelGroup([DelWithGroup([DelChars(1), DelSkip(1)]), DelSkip(5), DelChars(1), DelSkip(5)])])])]
    del [AddWithGroup([AddWithGroup([AddGroup({"tag": "h1"}, [AddSkip(6)]), AddGroup({"tag": "p"}, [AddWithGroup([AddChars("W")]), AddSkip(4)])])])]
start obj [DocGroup({"tag": "ul"}, [DocGroup({"tag": "li"}, [DocGroup({"tag": "h1"}, [DocChars("Hello! "), DocGroup({"tag": "b"}, [DocChars("what\'s")]), DocChars(" up?")]), DocGroup({"tag": "p"}, [DocChars("World!")])])])]
apply op ([DelWithGroup([DelWithGroup([DelGroup([DelWithGroup([DelChars(1), DelSkip(1)]), DelSkip(5), DelChars(1), DelSkip(5)])])])], [AddWithGroup([AddWithGroup([AddGroup({"tag": "h1"}, [AddSkip(6)]), AddGroup({"tag": "p"}, [AddWithGroup([AddChars("W")]), AddSkip(4)])])])])
thread '<unnamed>' panicked at 'Invalid DelWithGroup', /Users/trim/tcr/edit-text/oatie/src/lib.rs:380:24
note: Run with `RUST_BACKTRACE=1` for a backtrace.
Running test_thing handler, URL path: confirm
SHOULD MATCH Ok("[[[[],[{\"AddWithGroup\":[{\"AddWithGroup\":[{\"AddWithGroup\":[{\"AddSkip\":11},{\"AddChars\":\"?\"}]}]}]}]]],[{\"DocGroup\":[{\"tag\":\"ul\"},[{\"DocGroup\":[{\"tag\":\"li\"},[{\"DocGroup\":[{\"tag\":\"h1\"},[{\"DocChars\":\"Hello! \"},{\"DocGroup\":[{\"tag\":\"b\"},[{\"DocChars\":\"what\'s \"}]]},{\"DocChars\":\"up??\"}]]},{\"DocGroup\":[{\"tag\":\"p\"},[{\"DocChars\":\"World!\"}]]}]]}]]}]]")
Error: BodyError { detail: "Can\'t parse body to the struct", cause: JsonError(ErrorImpl { code: Message("invalid type: sequence, expected usize"), line: 0, column: 0 }) }
Running test_thing handler, URL path: confirm
SHOULD MATCH Ok("[[[[],[{\"AddWithGroup\":[{\"AddWithGroup\":[{\"AddWithGroup\":[{\"AddSkip\":11},{\"AddChars\":\"?\"}]}]}]}]]],[{\"DocGroup\":[{\"tag\":\"ul\"},[{\"DocGroup\":[{\"tag\":\"li\"},[{\"DocGroup\":[{\"tag\":\"h1\"},[{\"DocChars\":\"Hello! \"},{\"DocGroup\":[{\"tag\":\"b\"},[{\"DocChars\":\"what\'s \"}]]},{\"DocChars\":\"up??\"}]]},{\"DocGroup\":[{\"tag\":\"p\"},[{\"DocChars\":\"World!\"}]]}]]}]]}]]")
Error: BodyError { detail: "Can\'t parse body to the struct", cause: JsonError(ErrorImpl { code: Message("invalid type: sequence, expected usize"), line: 0, column: 0 }) }
Running sync thing handler, URL path: sync
Error: BodyError { detail: "Can\'t parse body to the struct", cause: JsonError(ErrorImpl { code: Message("invalid type: sequence, expected usize"), line: 0, column: 0 }) }
